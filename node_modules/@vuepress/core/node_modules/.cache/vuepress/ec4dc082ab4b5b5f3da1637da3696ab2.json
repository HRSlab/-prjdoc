{"remainingRequest":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/imac/Documents/GitHub/@prjdoc/node_modules/vuepress-auth0/dist/routeGuard.js","dependencies":[{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/vuepress-auth0/dist/routeGuard.js","mtime":1590251724526},{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1590251710302},{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/babel-loader/lib/index.js","mtime":1590251708855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubGluayI7Cgp2YXIgX3RoaXMgPSB0aGlzOwoKaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CmltcG9ydCBVUkkgZnJvbSAndXJpanMnOwppbXBvcnQgQXV0aFNlcnZpY2UgZnJvbSAnLi9hdXRoU2VydmljZSc7Cgp2YXIgaXNDYWxsYmFjayA9IGZ1bmN0aW9uIGlzQ2FsbGJhY2socm91dGUsIGNiVVJMLCBiYXNlKSB7CiAgdmFyIGNiVVJJID0gVVJJKGNiVVJMKTsKICB2YXIgY2JQYXRoID0gY2JVUkkucGF0aCgpOwogIHZhciByb3V0ZUZ1bGxQYXRoID0gVVJJLmpvaW5QYXRocyhiYXNlLCByb3V0ZS5wYXRoKS50b1N0cmluZygpOwogIHJldHVybiBjYlBhdGggPT09IHJvdXRlRnVsbFBhdGg7Cn07Cgp2YXIgcm91dGVHdWFyZCA9IGZ1bmN0aW9uIHJvdXRlR3VhcmQob3B0aW9ucywgc2l0ZURhdGEsIHJvdXRlciwgVnVlKSB7CiAgdmFyIGF1dGhTZXJ2aWNlID0gbmV3IEF1dGhTZXJ2aWNlKG9wdGlvbnMsIHJvdXRlcik7CiAgVnVlLnByb3RvdHlwZS4kYXV0aCA9IGF1dGhTZXJ2aWNlOwogIHZhciBiYXNlID0gc2l0ZURhdGEuYmFzZTsKICB2YXIgbmF2ID0gc2l0ZURhdGEudGhlbWVDb25maWcubmF2OwogIHJldHVybiBmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGF1dGhTdGF0ZSwgbGluaywgbGlua0luZGV4LCByb3V0ZU5lZWRzQXV0aCwgdXNlckhhc01hdGNoaW5nUm9sZXMsIHByb2ZpbGVSb2xlcywgcHJvZmlsZSwgbmF2Q29uZmlnLCBtYXRjaGluZ1JvbGVzLCBtYXRjaGluZ1JvbGVzOwogICAgICByZXR1cm4gdHNsaWJfMS5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHsKICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBbNCwgYXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKCldOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgYXV0aFN0YXRlID0gX2Euc2VudCgpOwogICAgICAgICAgICBsaW5rID0gdG8ucGF0aC5yZXBsYWNlKC9cLlteLy5dKyQvLCAiIik7CiAgICAgICAgICAgIGxpbmtJbmRleCA9IG5hdi5maW5kSW5kZXgoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICByZXR1cm4geC5saW5rID09PSBsaW5rOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcm91dGVOZWVkc0F1dGggPSBmYWxzZTsKICAgICAgICAgICAgdXNlckhhc01hdGNoaW5nUm9sZXMgPSB0cnVlOwogICAgICAgICAgICBwcm9maWxlUm9sZXMgPSBbXTsKICAgICAgICAgICAgcmV0dXJuIFs0LCBhdXRoU2VydmljZS5wcm9maWxlXTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHByb2ZpbGUgPSBfYS5zZW50KCk7CgogICAgICAgICAgICBpZiAocHJvZmlsZSAmJiBwcm9maWxlW29wdGlvbnMubmFtZXNwYWNlICsgJ3JvbGVzJ10pIHsKICAgICAgICAgICAgICBwcm9maWxlUm9sZXMgPSBwcm9maWxlW29wdGlvbnMubmFtZXNwYWNlICsgJ3JvbGVzJ107CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChsaW5rSW5kZXggPiAtMSkgewogICAgICAgICAgICAgIG5hdkNvbmZpZyA9IG5hdltsaW5rSW5kZXhdOwoKICAgICAgICAgICAgICBpZiAobmF2Q29uZmlnLm1ldGEgJiYgbmF2Q29uZmlnLm1ldGEuYXV0aCB8fCBvcHRpb25zLmFsbFJvdXRlcykgewogICAgICAgICAgICAgICAgcm91dGVOZWVkc0F1dGggPSB0cnVlOwoKICAgICAgICAgICAgICAgIGlmICghb3B0aW9ucy5hbGxSb3V0ZXMgJiYgbmF2Q29uZmlnLm1ldGEucm9sZXMgJiYgbmF2Q29uZmlnLm1ldGEucm9sZXMubGVuZ3RoID4gMCAmJiBwcm9maWxlUm9sZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICBtYXRjaGluZ1JvbGVzID0gbmF2Q29uZmlnLm1ldGEucm9sZXMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb2ZpbGVSb2xlcy5pbmNsdWRlcyh4KTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHVzZXJIYXNNYXRjaGluZ1JvbGVzID0gbWF0Y2hpbmdSb2xlcy5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLmFsbFJvdXRlcyAmJiBvcHRpb25zLnJvbGVzICYmIG9wdGlvbnMucm9sZXMubGVuZ3RoID4gMCAmJiBwcm9maWxlUm9sZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICBtYXRjaGluZ1JvbGVzID0gb3B0aW9ucy5yb2xlcy5maWx0ZXIoZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvZmlsZVJvbGVzLmluY2x1ZGVzKHgpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgdXNlckhhc01hdGNoaW5nUm9sZXMgPSBtYXRjaGluZ1JvbGVzLmxlbmd0aCA+IDAgPyB0cnVlIDogZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaXNDYWxsYmFjayh0bywgb3B0aW9ucy5yZWRpcmVjdFVyaSwgYmFzZSkgJiYgIWF1dGhTdGF0ZSkgewogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIGlmICghYXV0aFN0YXRlKSB7CiAgICAgICAgICAgICAgaWYgKHJvdXRlTmVlZHNBdXRoKSB7CiAgICAgICAgICAgICAgICBhdXRoU2VydmljZS5sb2dpbih7CiAgICAgICAgICAgICAgICAgIHRhcmdldDogdG8ucGF0aAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgaWYgKHVzZXJIYXNNYXRjaGluZ1JvbGVzKSB7CiAgICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLnVuYXV0aG9yaXplZFJvdXRlKSB7CiAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKG9wdGlvbnMudW5hdXRob3JpemVkUm91dGUpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcm91dGVyLnB1c2goJy80MDQnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBbMl07CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH07Cn07CgpleHBvcnQgZGVmYXVsdCByb3V0ZUd1YXJkOw=="},null]}