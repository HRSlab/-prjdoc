{"remainingRequest":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/imac/Documents/GitHub/@prjdoc/node_modules/@vuepress/core/.temp/internal/siteData.js","dependencies":[{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/@vuepress/core/.temp/internal/siteData.js","mtime":1590252200832},{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1590251710302},{"path":"/Users/imac/Documents/GitHub/@prjdoc/node_modules/babel-loader/lib/index.js","mtime":1590251708855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}