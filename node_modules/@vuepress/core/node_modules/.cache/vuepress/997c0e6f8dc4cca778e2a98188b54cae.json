{"remainingRequest":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/hrslab/Documents/GitHub/prjdoc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/hrslab/Documents/GitHub/prjdoc/docs/Developers/README.md?vue&type=template&id=e1931da2&","dependencies":[{"path":"/Users/hrslab/Documents/GitHub/prjdoc/docs/Developers/README.md","mtime":1604845477213},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1604845479153},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1604845538099},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/cache-loader/dist/cjs.js","mtime":1604845479153},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/vue-loader/lib/index.js","mtime":1604845538098},{"path":"/Users/hrslab/Documents/GitHub/prjdoc/node_modules/@vuepress/markdown-loader/index.js","mtime":1604845478271}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvZHluYW1pYy9qc29uP2NvbG9yPSUyMzM0N0NEQSZsYWJlbD1PcmUlMjBkaSUyMFN2aWx1cHBvJnByZWZpeD1PZ2dpJTNBJTIwJnF1ZXJ5PSUyNC5kYXRhJTVCLTElM0ElNUQuZ3JhbmRfdG90YWwudGV4dCZ1cmw9aHR0cHMlM0ElMkYlMkZ3YWthdGltZS5jb20lMkZzaGFyZSUyRiU0MEhSU2xhYiUyRmEzMWZlZjgwLWUwNWYtNGE0NC1hZDk3LWJkMWY5NWFiZmQwOC5qc29uIiwiYWx0IjoiY29kaW5nIn19KSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL3RyYXZpcy1jaS5vcmcvSFJTbGFiL3ByamRvYy5zdmc/YnJhbmNoPW1hc3RlciIsImFsdCI6IkJ1aWxkIFN0YXR1cyJ9fSksX3ZtLl92KCIgIiksX2MoJ2ltZycse2F0dHJzOnsic3JjIjoiaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9uZXRsaWZ5L2UzMmFiM2FlLTkxYWQtNDlkMC05NmJmLWVmMTFiOWRmM2EzNT9sYWJlbD1EZXBsb3kmbG9nbz1OZXRsaWZ5JmxvZ29Db2xvcj0lMjNmYWZhZmEiLCJhbHQiOiJOZXRsaWZ5In19KSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL3d3dy5kZWVwY29kZS5haS9hcGkvZ2gvYmFkZ2U/a2V5PWV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUp3YkdGMFptOXliVEVpT2lKbmFDSXNJbTkzYm1WeU1TSTZJa2hTVTJ4aFlpSXNJbkpsY0c4eElqb2lMWEJ5YW1Sdll5SXNJbWx1WTJ4MVpHVk1hVzUwSWpwbVlXeHpaU3dpWVhWMGFHOXlTV1FpT2pFek5Ua3lMQ0pwWVhRaU9qRTJNREF4TkRZek5USjkuV0JMSXlXbFU0RUtNMXN4bDEyVmdaemNycHc5M2V2OXFDNHlpT1pfaGk1VSIsImFsdCI6ImRlZXBjb2RlIn19KV0pLF92bS5fdigiICIpLF9jKCdoMScse2F0dHJzOnsiaWQiOiJzcGVjaWZpY2hlLXRlY25pY2hlIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3BlY2lmaWNoZS10ZWNuaWNoZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTcGVjaWZpY2hlIFRlY25pY2hlIildKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6Imh0dHBzOi8vZGV2LmF6dXJlLmNvbS9IUlMyMDIwLzgwZDA3MTNmLTIyY2UtNDBlYi05Y2E2LThkMTk4NmJmY2U4YS8wN2JkMjQzNi01ZjVmLTQ4ZWEtYWEwYi0xMWUyM2IxMWVhMzgvX2FwaXMvd29yay9ib2FyZGJhZGdlLzJiMDUwN2E3LWU5NGEtNDM4OS1iMTQxLTVlNjZmNTZiMGNhMz9jb2x1bW5PcHRpb25zPTEiLCJhbHQiOiJCb2FyZCBTdGF0dXMifX0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9mZWF0dXJlcy8ifX0sW192bS5fdigiRmVhdHVyZXMiKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiXzEtY29udHJvbGxvLWRpLXZlcnNpb25lLXVsdGltby1hZ2dpb3JuYW1ldG8tcGFnZS1sYXN0dXBkYXRlZCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI18xLWNvbnRyb2xsby1kaS12ZXJzaW9uZS11bHRpbW8tYWdnaW9ybmFtZXRvLXBhZ2UtbGFzdHVwZGF0ZWQifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgMS4gQ29udHJvbGxvIGRpIFZlcnNpb25lICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiTGFiZWwgTGFiZWwtLW91dGxpbmUgTGFiZWwtLW91dGxpbmUtZ3JlZW4gZmxvYXQtcmlnaHQgbWItMyJ9LFtfdm0uX3YoIlVsdGltbyBBZ2dpb3JuYW1ldG86ICIrX3ZtLl9zKF92bS4kcGFnZS5sYXN0VXBkYXRlZCkpXSldKSxfdm0uX3YoIiAiKSxfYygnYnInKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQSBzZWd1aXJlIGxhIGxpc3RhIGRlbGxlIG1vZGlmaWNoZSBhbCBkb2N1bWVudG8sIGNvbiBsJ2F1dG9yZSBkZWxsZSBtb2RpZmljaGUsIGlsIGNvZGljZSBpZGVudGlmaWNhdGl2byBkZWxsZSBtb2RpY2hlIGUgbGEgZGVzY3JpemlvbmUgZGVsbGEgbW9kaWZpY2EuIildKSxfdm0uX3YoIiAiKSxfYygndGFibGUnLFtfYygndGhlYWQnLFtfYygndHInLFtfYygndGgnLFtfdm0uX3YoIkRhdGEiKV0pLF92bS5fdigiICIpLF9jKCd0aCcsW192bS5fdigiQXV0b3JlIildKSxfdm0uX3YoIiAiKSxfYygndGgnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiVmVyc2lvbmUiKV0pLF92bS5fdigiICIpLF9jKCd0aCcsW192bS5fdigiRGVzY3JpemlvbmUiKV0pXSldKSxfdm0uX3YoIiAiKSxfYygndGJvZHknLFtfYygndHInLFtfYygndGQnLFtfdm0uX3YoX3ZtLl9zKF92bS4kcGFnZS5naXQuY29tbWl0c1swXS5kYXRlU2hvcnQpKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdihfdm0uX3MoX3ZtLiRwYWdlLmdpdC5hdXRob3IpKV0pLF92bS5fdigiICIpLF9jKCd0ZCcse3N0YXRpY1N0eWxlOnsidGV4dC1hbGlnbiI6ImNlbnRlciJ9fSxbX3ZtLl92KCIxLjEiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdihfdm0uX3MoX3ZtLiRwYWdlLmdpdC5jb21taXRzWzBdLnN1YmplY3QpKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KF92bS5fcyhfdm0uJHBhZ2UuZ2l0LnVwZGF0ZWQpKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdihfdm0uX3MoX3ZtLiRwYWdlLmdpdC5hdXRob3IpKV0pLF92bS5fdigiICIpLF9jKCd0ZCcse3N0YXRpY1N0eWxlOnsidGV4dC1hbGlnbiI6ImNlbnRlciJ9fSxbX3ZtLl92KCIxLjAiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiQ3JlYXppb25lIERvY3VtZW50byIpXSldKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6Il8yLWxpc3RhLWRpLWRpc3RyaWJ1emlvbmUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfMi1saXN0YS1kaS1kaXN0cmlidXppb25lIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDIuIExpc3RhIGRpIERpc3RyaWJ1emlvbmUiKV0pLF92bS5fdigiICIpLF9jKCd0YWJsZScsW19jKCd0aGVhZCcsW19jKCd0cicsW19jKCd0aCcsW192bS5fdigiTm9tZSIpXSksX3ZtLl92KCIgIiksX2MoJ3RoJyxbX3ZtLl92KCJBemllbmRhIildKSxfdm0uX3YoIiAiKSxfYygndGgnLFtfdm0uX3YoIlJ1b2xvIildKSxfdm0uX3YoIiAiKSxfYygndGgnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiQ29udGFjdCIpXSldKV0pLF92bS5fdigiICIpLF9jKCd0Ym9keScsW19jKCd0cicsW19jKCd0ZCcsW192bS5fdigiQENsaWVudE5hbWUiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiQ29tcGFueVhZIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIlByb2plY3QgU3BvbnNvciIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoImNsaWVudEBjb21wYW55LmNvbSIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoIkBDbGllbnROYW1lIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkNvbXBhbnlYWSIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJCdXNpbmVzcyBBbmFseXN0IildKSxfdm0uX3YoIiAiKSxfYygndGQnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiYmFAY29tcGFueS5jb20iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJAQW5kcmVhIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoX3ZtLl9zKF92bS4kcGFnZS5naXQuYXV0aG9yKSldKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIlByb2R1Y3QgTWFuYWdlciIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoImFuZHJlYUBocnNsYWIuY29tIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiQENhcmxvIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoX3ZtLl9zKF92bS4kcGFnZS5naXQuYXV0aG9yKSldKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIlByb2plY3QgTWFuYWdlciIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoImNhcmxvQGhyc2xhYi5jb20iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJAZGV2ZWxvcGVycyIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KF92bS5fcyhfdm0uJHBhZ2UuZ2l0LmF1dGhvcikpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJEZXZlbG9wbWVudCBUZWFtIildKSxfdm0uX3YoIiAiKSxfYygndGQnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiZGV2ZWxvcGVyc0BocnNsYWIuY29tIildKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiXzMtdGVybWlub2xvZ2lhLWUtcmlmZXJpbWVudGkifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfMy10ZXJtaW5vbG9naWEtZS1yaWZlcmltZW50aSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAzLiBUZXJtaW5vbG9naWEgZSBSaWZlcmltZW50aSIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Il8zLTEtYWJicmV2aWF6aW9uaSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI18zLTEtYWJicmV2aWF6aW9uaSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAzLjEgQWJicmV2aWF6aW9uaSIpXSksX3ZtLl92KCIgIiksX2MoJ3RhYmxlJyxbX2MoJ3RoZWFkJyxbX2MoJ3RyJyxbX2MoJ3RoJyxbX3ZtLl92KCJBYmJyZXZpYXppb25lIildKSxfdm0uX3YoIiAiKSxfYygndGgnLFtfdm0uX3YoIkRlZmluaXppb25lIildKV0pXSksX3ZtLl92KCIgIiksX2MoJ3Rib2R5JyxbX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJBUEkiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiQXBwbGljYXRpb24gUHJvZ3JhbW1pbmcgSW50ZXJmYWNlIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiQVdTIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkFtYXpvbiBXZWIgU2VydmljZXMiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJBamF4IildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkFzeW5jaHJvbm91cyBKYXZhU2NyaXB0IGFuZCBYTUwiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJDQVBUQ0hBIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkNvbXBsZXRlbHkgQXV0b21hdGVkIFB1YmxpYyBUdXJpbmcgVGVzdCB0byB0ZWxsIENvbXB1dGVycyBhbmQgSHVtYW5zIEFwYXJ0IildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiQ0ROIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkNvbnRlbnQgRGVsaXZlcnkgTmV0d29yayIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoIkVSRCIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJFbnRpdHktUmVsYXRpb25zaGlwIERpYWdyYW0iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJFUk0iKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiRW50aXR5LVJlbGF0aW9uc2hpcCBNb2RlbCIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoIklERSIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJJbnRlZ3JhdGVkIGRldmVsb3BtZW50IGVudmlyb25tZW50IildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiRVJQIildKSxfdm0uX3YoIiAiKSxfYygndGQnLFtfdm0uX3YoIkVudGVycHJpc2UgUmVzb3VyY2UgUGxhbm5pbmciKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJIRlMiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcsW192bS5fdigiSGllcmFyY2hpY2FsIEZpbGUgU3lzdGVtIildKV0pLF92bS5fdigiICIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdigiSFRUUCIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJIeXBlcnRleHQgVHJhbnNmZXIgUHJvdG9jb2wiKV0pXSksX3ZtLl92KCIgIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KCJIVFRQUyIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJIVFRQIFNlY3VyZSIpXSldKSxfdm0uX3YoIiAiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoIlNESyIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyxbX3ZtLl92KCJTb2Z0d2FyZSBEZXZlbG9wbWVudCBLaXQiKV0pXSldKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJQZXIgYWx0cmkgdGVybWluaSBub24gaW5jbHVzaSBjb25zdWx0YSBpbCAiKSxfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvZ2xvc3NhcnkvIn19LFtfdm0uX3YoIkRpemlvbmFyaW8iKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzMtMi1kb2N1bWVudGktZGktcmlmZXJpbWVudG8ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfMy0yLWRvY3VtZW50aS1kaS1yaWZlcmltZW50byJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAzLjIgRG9jdW1lbnRpIGRpIHJpZmVyaW1lbnRvIildKSxfdm0uX3YoIiAiKSxfYygndGFibGUnLFtfYygndGhlYWQnLFtfYygndHInLFtfYygndGgnLFtfdm0uX3YoIkRvY3VtZW50byIpXSksX3ZtLl92KCIgIiksX2MoJ3RoJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoIlZlcnNpb25lIildKSxfdm0uX3YoIiAiKSxfYygndGgnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiRGF0YSIpXSksX3ZtLl92KCIgIiksX2MoJ3RoJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoIlN0YXRvIildKSxfdm0uX3YoIiAiKSxfYygndGgnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiQXV0b3JlIildKV0pXSksX3ZtLl92KCIgIiksX2MoJ3Rib2R5JyxbX2MoJ3RyJyxbX2MoJ3RkJyxbX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL0RldmVsb3BlcnMvZmVhdHVyZXMvIn19LFtfdm0uX3YoIkZlYXR1cmVzIildKV0sMSksX3ZtLl92KCIgIiksX2MoJ3RkJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoIjEuMCIpXSksX3ZtLl92KCIgIiksX2MoJ3RkJyx7c3RhdGljU3R5bGU6eyJ0ZXh0LWFsaWduIjoiY2VudGVyIn19LFtfdm0uX3YoImRkLm1tLnl5eXkiKV0pLF92bS5fdigiICIpLF9jKCd0ZCcse3N0YXRpY1N0eWxlOnsidGV4dC1hbGlnbiI6ImNlbnRlciJ9fSxbX3ZtLl92KCJwdWJibGljYXRvIildKSxfdm0uX3YoIiAiKSxfYygndGQnLHtzdGF0aWNTdHlsZTp7InRleHQtYWxpZ24iOiJjZW50ZXIifX0sW192bS5fdigiQENhcmxvIildKV0pXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzMtMy1wcmVzdXBwb3N0aSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI18zLTMtcHJlc3VwcG9zdGkifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgMy4zIFByZXN1cHBvc3RpIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScpLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJfNC1pbmRpY2UifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNC1pbmRpY2UifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNC4gSW5kaWNlIildKSxfdm0uX3YoIiAiKSxfYygncCcpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGFibGUtb2YtY29udGVudHMifSxbX2MoJ3VsJyxbX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzEtY29udHJvbGxvLWRpLXZlcnNpb25lLWRpdi1jbGFzcy1sYWJlbC1sYWJlbC1vdXRsaW5lLWxhYmVsLW91dGxpbmUtZ3JlZW4tZmxvYXQtcmlnaHQtbWItMy11bHRpbW8tYWdnaW9ybmFtZXRvLXBhZ2UtbGFzdHVwZGF0ZWQtZGl2In19LFtfdm0uX3YoIjEuIENvbnRyb2xsbyBkaSBWZXJzaW9uZSAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6IkxhYmVsIExhYmVsLS1vdXRsaW5lIExhYmVsLS1vdXRsaW5lLWdyZWVuIGZsb2F0LXJpZ2h0IG1iLTMifSxbX3ZtLl92KCJVbHRpbW8gQWdnaW9ybmFtZXRvOiAiK192bS5fcyhfdm0uJHBhZ2UubGFzdFVwZGF0ZWQpKV0pXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfMi1saXN0YS1kaS1kaXN0cmlidXppb25lIn19LFtfdm0uX3YoIjIuIExpc3RhIGRpIERpc3RyaWJ1emlvbmUiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzMtdGVybWlub2xvZ2lhLWUtcmlmZXJpbWVudGkifX0sW192bS5fdigiMy4gVGVybWlub2xvZ2lhIGUgUmlmZXJpbWVudGkiKV0pLF9jKCd1bCcsW19jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI18zLTEtYWJicmV2aWF6aW9uaSJ9fSxbX3ZtLl92KCIzLjEgQWJicmV2aWF6aW9uaSIpXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfMy0yLWRvY3VtZW50aS1kaS1yaWZlcmltZW50byJ9fSxbX3ZtLl92KCIzLjIgRG9jdW1lbnRpIGRpIHJpZmVyaW1lbnRvIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI18zLTMtcHJlc3VwcG9zdGkifX0sW192bS5fdigiMy4zIFByZXN1cHBvc3RpIildKV0pXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfNC1pbmRpY2UifX0sW192bS5fdigiNC4gSW5kaWNlIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI181LWludHJvZHV6aW9uZSJ9fSxbX3ZtLl92KCI1LiBJbnRyb2R1emlvbmUiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzYtc3BlY2lmaWNoZS1kaS1zaXN0ZW1hIn19LFtfdm0uX3YoIjYuIFNwZWNpZmljaGUgZGkgU2lzdGVtYSIpXSksX2MoJ3VsJyxbX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjY29yZSJ9fSxbX3ZtLl92KCJjb3JlIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI182LTEtYXJjaGl0ZXR0dXJhLWRlbC1zaXRvLXNpc3RlbWEifX0sW192bS5fdigiNi4xIEFyY2hpdGV0dHVyYSBkZWwgU2l0by9TaXN0ZW1hIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI182LTItc3BlY2lmaWNoZS1oYXJkd2FyZS1lLWNvbmZpZ3VyYXppb25lLWRlbC1zZXJ2ZXIifX0sW192bS5fdigiNi4yIFNwZWNpZmljaGUgSGFyZHdhcmUgZSBDb25maWd1cmF6aW9uZSBkZWwgU2VydmVyIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI182LTMtYWx0cmUtcGlhdHRhZm9ybWUtZS1vLWFwcGxpY2F6aW9uaSJ9fSxbX3ZtLl92KCI2LjMgQWx0cmUgUGlhdHRhZm9ybWUgZS9vIEFwcGxpY2F6aW9uaSIpXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfNi00LXNwZWNpZmljaGUtc29mdHdhcmUifX0sW192bS5fdigiNi40IFNwZWNpZmljaGUgU29mdHdhcmUiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzYtNS1pbnRlZmFjY2UtZGktc2lzdGVtYS1lLXByb2RvdHRpLWRpLXRlcnplLXBhcnRpIn19LFtfdm0uX3YoIjYuNSBJbnRlZmFjY2UgZGkgU2lzdGVtYSBlIHByb2RvdHRpIGRpIHRlcnplIHBhcnRpIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI182LTYtc2ljdXJlenphIn19LFtfdm0uX3YoIjYuNiBTaWN1cmV6emEiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzYtNy1kZXZlbG9wbWVudC1zdGFuZGFyZHMtY29tcGxpYW5jZSJ9fSxbX3ZtLl92KCI2LjcgRGV2ZWxvcG1lbnQgU3RhbmRhcmRzICYgQ29tcGxpYW5jZSIpXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfNi04LWNvbmZpZ3VyYXRpb24tbWFuYWdlbWVudCJ9fSxbX3ZtLl92KCI2LjggQ29uZmlndXJhdGlvbiBNYW5hZ2VtZW50IildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI182LTktYmFja3VwLXJlY292ZXJ5In19LFtfdm0uX3YoIjYuOSBCYWNrdXAgJiBSZWNvdmVyeSIpXSldKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzctdXNlci1pbnRlcmZhY2Utc3BlY2lmaWNhdGlvbiJ9fSxbX3ZtLl92KCI3LiBVc2VyIEludGVyZmFjZSBTcGVjaWZpY2F0aW9uIildKSxfYygndWwnLFtfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNfNy0xLXVzZXItYWdlbnQtc3BlY2lmaWNhdGlvbiJ9fSxbX3ZtLl92KCI3LjEgVXNlciBBZ2VudCBzcGVjaWZpY2F0aW9uIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI183LTItdXNlci1pbnRlcmZhY2UtZGVzaWduLWFuZC1kZXZlbG9wbWVudCJ9fSxbX3ZtLl92KCI3LjIgVXNlciBJbnRlcmZhY2UgRGVzaWduIGFuZCBEZXZlbG9wbWVudCIpXSldKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjXzgtdGVjaG5pY2FsLWRlc2lnbiJ9fSxbX3ZtLl92KCI4LiBUZWNobmljYWwgRGVzaWduIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI185LWludGVncmF0aW9uIn19LFtfdm0uX3YoIjkuIEludGVncmF0aW9uIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI18xMC1hcHBlbmRpY2VzIn19LFtfdm0uX3YoIjEwLiBBcHBlbmRpY2VzIildKV0pXSldKSxfYygncCcpLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJfNS1pbnRyb2R1emlvbmUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNS1pbnRyb2R1emlvbmUifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNS4gSW50cm9kdXppb25lIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCJSaWFzc3VudG8gZGVsbGUgc2V6aW9uaSBzb3R0b3N0YW50aS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6Il82LXNwZWNpZmljaGUtZGktc2lzdGVtYSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI182LXNwZWNpZmljaGUtZGktc2lzdGVtYSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LiBTcGVjaWZpY2hlIGRpIFNpc3RlbWEiKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJjb3JlIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY29yZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBjb3JlIildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9odG1sLmh0bWwifX0sW192bS5fdigiSFRNTCIpXSksX3ZtLl92KCIg4oCUIEd1aWRhIGFsbGUgaW1wb3N0YXppb25pIGRpIGJhc2UgSFRNTC4iKV0sMSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL0RldmVsb3BlcnMvY3NzLmh0bWwifX0sW192bS5fdigiQ1NTIildKSxfdm0uX3YoIiDigJQgR3VpZGEgYWxsZSBpbXBvc3RhemlvbmkgZGkgYmFzZSBDU1MuIildLDEpLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL2pzLmh0bWwifX0sW192bS5fdigiSmF2YVNjcmlwdCIpXSksX3ZtLl92KCIg4oCUIEd1aWRhIGFsbGUgaW1wb3N0YXppb25pIGRpIGJhc2UgSmF2YVNjcmlwdC4iKV0sMSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoic3RydXR0dXJhLWRpLWJhc2UifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzdHJ1dHR1cmEtZGktYmFzZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTdHJ1dHR1cmEgZGkgQmFzZSIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJsYW5ndWFnZS1BU0NJSSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCIuXG7ilJzilIDilIAgY3NzXG7ilIIgICDilJzilIDilIAgbWFpbi5jc3NcbuKUgiAgIOKUlOKUgOKUgCBub3JtYWxpemUuY3NzXG7ilJzilIDilIAgZG9jXG7ilJzilIDilIAgaW1nXG7ilJzilIDilIAganNcbuKUgiAgIOKUnOKUgOKUgCBtYWluLmpzXG7ilIIgICDilJzilIDilIAgcGx1Z2lucy5qc1xu4pSCICAg4pSU4pSA4pSAIHZlbmRvclxu4pSCICAgICAgIOKUlOKUgOKUgCBtb2Rlcm5penIubWluLmpzXG7ilJzilIDilIAgLmVkaXRvcmNvbmZpZ1xu4pSc4pSA4pSAIC5odGFjY2Vzc1xu4pSc4pSA4pSAIDQwNC5odG1sXG7ilJzilIDilIAgYnJvd3NlcmNvbmZpZy54bWxcbuKUnOKUgOKUgCBmYXZpY29uLmljb1xu4pSc4pSA4pSAIGh1bWFucy50eHRcbuKUnOKUgOKUgCBpY29uLnBuZ1xu4pSc4pSA4pSAIGluZGV4Lmh0bWxcbuKUnOKUgOKUgCBwYWNrYWdlLmpzb25cbuKUnOKUgOKUgCByb2JvdHMudHh0XG7ilJzilIDilIAgc2l0ZS53ZWJtYW5pZmVzdFxu4pSc4pSA4pSAIHRpbGUucG5nXG7ilJTilIDilIAgdGlsZS13aWRlLnBuZ1xuIildKV0pXSksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6ImNzcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2NzcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBjc3MiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJRdWVzdGEgY2FydGVsbGEgY29udGllbmUgdHV0dGkgaSBmaWxlIENTUy5cbkxlIGltcG9zdGF6aW9uaSBkaSBiYXNlIHNvbm8gZGVzY3JpdHRlIG5lbGxhICIpLF9jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL2Nzcy5odG1sIn19LFtfdm0uX3YoInNlemlvbmUgZGVkaWNhdGEiKV0pLF92bS5fdigiLiIpXSwxKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiZG9jIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZG9jIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIGRvYyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkNhcnRlbGxhIGNvbnRlbmVudGUgbGEgZG9jdW1lbnRhemlvbmUgdGVjbmljYS4gIiksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczoiTGFiZWwgTGFiZWwtLWdyYXkiLGF0dHJzOnsidGl0bGUiOiJMYWJlbDogb3B0aW9uYWwifX0sW192bS5fdigiT3B6aW9uYWxlIildKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJqcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2pzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIGpzIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUXVlc3RhIGNhcnRlbGxhIGNvbnRpZW5lIHR1dHRpIGkgZmlsZSBKYXZhU2NyaXB0LlxuTGlicmVyaWUsIHBsdWdpbnMsIGUgY29kaWNlIHBlcnNvbmFsaXp6YXRvIHNvbm8gaW5jbHVzZSBxdWkuXG5MZSBpbXBvc3RhemlvbmkgZGkgYmFzZSBzb25vIGRlc2NyaXR0ZSBuZWxsYSAiKSxfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9qcy5odG1sIn19LFtfdm0uX3YoInNlemlvbmUgZGVkaWNhdGEiKV0pLF92bS5fdigiLiIpXSwxKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiaHRhY2Nlc3MifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNodGFjY2VzcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAuaHRhY2Nlc3MiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJDb25maWd1cmF6aW9uZSBkaSBiYXNlIHBlciBpbCB3ZWIgc2VydmVyIEFwYWNoZS4gUGVyIG1hZ2dpb3JuaSBpbmZvcm1hemlvbmkgdmVkaSAiKSxfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9EZXZlbG9wZXJzL2FwYWNoZUNvbmZpZy5odG1sIn19LFtfdm0uX3YoIkNvbmZpZ3VyYXppb25lIFNlcnZlciBBcGFjaGUiKV0pLF92bS5fdigiLiIpXSwxKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiUGVyIGNvbmZpZ3VyYXppb25lIGRpIHNlcnZlcnMgYWx0ZXJhdGl2aSBjb25zdWx0YXJlIGxhIHNlemlvbmUgZGVkaWNhdGEgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vaDVicC9zZXJ2ZXItY29uZmlncy9ibG9iL21hc3Rlci9SRUFETUUubWQiLCJ0YXJnZXQiOiJfc2VsZiIsInJlbCI6IiJ9fSxbX3ZtLl92KCJDb25maWd1YXJhemlvbmUgU2VydmVyIildKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJfNDA0LWh0bWwifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNDA0LWh0bWwifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNDA0Lmh0bWwiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJMYSBwYWdpbmEgNDA0IGNvbWUgZGEgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2hyc2xhYi5jb20vIiwidGFyZ2V0IjoiX3NlbGYiLCJyZWwiOiIifX0sW192bS5fdigiZGlzZWdubyIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiYnJvd3NlcmNvbmZpZy14bWwifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNicm93c2VyY29uZmlnLXhtbCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBicm93c2VyY29uZmlnLnhtbCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlF1ZXN0byBmaWxlIGNvbnRpZW5lIHR1dHRlIGxlIGltcG9zdGF6aW9uaSBwZXIgbGEgcGVyc29uYWxpenphemlvbmUgZGkgSUUxMSBlIEVkZ2VcblBlciBtYWdnaW9yaSBpbmZvcm1hemlvbmkgc3VsbCdhcmdvbWVudG8gZmFyZSByaWZlcmltZW50byBhbGxhICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvcHJldmlvdXMtdmVyc2lvbnMvd2luZG93cy9pbnRlcm5ldC1leHBsb3Jlci9pZS1kZXZlbG9wZXIvcGxhdGZvcm0tYXBpcy9kbjMyMDQyNih2PXZzLjg1KSIsInRhcmdldCI6Il9zZWxmIiwicmVsIjoiIn19LFtfdm0uX3YoIkRvY3VtZW50YXppb25lIE1pY3Jvc29mdCIpXSksX3ZtLl92KCIuIildKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiZWRpdG9yY29uZmlnIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZWRpdG9yY29uZmlnIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIC5lZGl0b3Jjb25maWciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJJbCBmaWxlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCIuZWRpdG9yY29uZmlnIildKSxfdm0uX3YoIiBzZXJ2ZSBhIG1hbnRlbmVyZSBjb25zaXN0ZW56YSBuZWwgY29kaWNlIHRyYSBkaWZmZXJlbnRpIGVkaXRvciBlIElERXNcbiIpLF9jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL21pc2MuaHRtbCNlZGl0b3Jjb25maWcifX0sW192bS5fdigiUGVyIG1hZ2dpb3JpIGluZm9ybWF6aW9uaSBzdSAiKSxfYygnY29kZScsW192bS5fdigiLmVkaXRvcmNvbmZpZyIpXSksX3ZtLl92KCIgZmlsZSIpXSksX3ZtLl92KCIuIildLDEpLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJpbmRleC1odG1sIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjaW5kZXgtaHRtbCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBpbmRleC5odG1sIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiU3RydXR0dXJhIEhUTUwgY2hlIHNlcnZlIGNvbWUgYmFzZSBwZXIgdHV0dGUgbGUgcGFnaW5lIGRlbCBzaXRvLiIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnLFtfYygncCcsW192bS5fdigiSWYgdXNpbmcgYSBzZXJ2ZXItc2lkZSB0ZW1wbGF0aW5nIGZyYW1ld29yaywgdGhlbiBpbnRlZ3JhdGUgdGhpcyBzdGFydGluZyBIVE1MIHdpdGggcHJvcGVyIHNldHVwLiBJZiBXb3JkUHJlc3MgbGlua3MgdG8gb2ZmaWNpYWwgZG9jcy5cbkV2ZW50dWFsaSBpbXBvc3RhemlvbmkgYWdnaXVudGl2ZSBwZXIgc2VydmVyLXNpZGUgZnJhbWV3b3JrLiIpXSldKSxfdm0uX3YoIiAiKSxfYygndWwnLHtzdGF0aWNDbGFzczoiY29udGFpbnMtdGFzay1saXN0In0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBEamFuZ28gKFB5dGhvbikiKV0pLF92bS5fdigiICIpLF9jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBGbGFzayAoUHl0aG9uKSIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgIiksX2MoJ3MnLFtfdm0uX3YoIkxNb2pvbGljaW91cyAoUGVybCkiKV0pLF92bS5fdigiICIpLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6Iklzc3VlTGFiZWwgYmctcmVkIHRleHQtd2hpdGUgbXItMSBweC0xIixhdHRyczp7InRpdGxlIjoiTGFiZWw6IGRlcHJlY2F0ZWQifX0sW192bS5fdigibm9uIHN1cHBvcnRhdG8iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIEV4cHJlc3MgKE5vZGUuanMvSmF2YVNjcmlwdCkiKV0pLF92bS5fdigiICIpLF9jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBMYXJhdmVsIChQSFApIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiAiKSxfYygncycsW192bS5fdigiQVNQLk5FVCIpXSksX3ZtLl92KCIgIiksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczoiSXNzdWVMYWJlbCBiZy1yZWQgdGV4dC13aGl0ZSBtci0xIHB4LTEiLGF0dHJzOnsidGl0bGUiOiJMYWJlbDogZGVwcmVjYXRlZCJ9fSxbX3ZtLl92KCJub24gc3VwcG9ydGF0byIpXSldKV0pLF92bS5fdigiICIpLF9jKCdoNScse2F0dHJzOnsiaWQiOiJjaGVjay1saXN0In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY2hlY2stbGlzdCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDaGVjayBMaXN0IildKSxfdm0uX3YoIiAiKSxfYygndWwnLHtzdGF0aWNDbGFzczoiY29udGFpbnMtdGFzay1saXN0In0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIEFnZ2lvcm5hcmUgZ2xpIFVSTHMgZGkgQ1NTIGUgSmF2YVNjcmlwdCBpbiBjYXNvIGRpIG1vZGlmaWNhIGFsbGEgc3RydXR0dXJhIGRpIGJhc2UuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBTZSBHb29nbGUgVW5pdmVyc2FsIEFuYWx5dGljcyDDqCBpbiB1c28sICBhZ2dpb3JuYXJlIGFuYWx5dGljcyBJRC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6Imh1bWFucy10eHQifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNodW1hbnMtdHh0In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIGh1bWFucy50eHQiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJRdWVzdG8gZmlsZSBjb250aWVuZSBpbCB0ZWFtIGNoZSBoYSBsYXZvcmF0byBhbGxvIHN2aWx1cHBvIGRlbCBzaXRvL2FwcCBlIGxhIHRlY25vbGdpYSB1c2F0YS4iKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJwYWNrYWdlLWpzb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNwYWNrYWdlLWpzb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgcGFja2FnZS5qc29uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRmlsZSBwZXIgbGEgZ2VzdGlvbmUgZGVsbGUgZGlwZW5kZW56ZSBkaSBwcm9nZXR0by4gIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vSFJTbGFiLy1wcmpkb2MvYmxvYi9iOTQ0NThhYTg5OWUxMzg5OTAwNDdiNjVkZWM2ODA3NGExZjM2NzdiL3BhY2thZ2UuanNvbiIsInRhcmdldCI6Il9zZWxmIiwicmVsIjoiIn19LFtfdm0uX3YoInZlZGkgaWwgZmlsZSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoicm9ib3RzLXR4dCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3JvYm90cy10eHQifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgcm9ib3RzLnR4dCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkZpbGUgcGVyIG5hc2NvbmRlcmUgbGUgcGFnaW5lIGRhaSBtb3RvcmkgZGkgcmljZXJjYSIpXSksX3ZtLl92KCIgIiksX2MoJ2g0Jyx7YXR0cnM6eyJpZCI6Imljb25zIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjaWNvbnMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgSWNvbnMiKV0pLF92bS5fdigiICIpLF9jKCdCbGFua1NsYXRlJyxbX2MoJ3AnLFtfdm0uX3YoIlJlcGxhY2UgdGhlIGRlZmF1bHQgIiksX2MoJ2NvZGUnLFtfdm0uX3YoImZhdmljb24uaWNvIildKSxfdm0uX3YoIiwgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRpbGUucG5nIildKSxfdm0uX3YoIiwgIiksX2MoJ2NvZGUnLFtfdm0uX3YoInRpbGUtd2lkZS5wbmciKV0pLF92bS5fdigiIGFuZCBBcHBsZSBUb3VjaFxuSWNvbiB3aXRoIHlvdXIgb3duLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIklmIHlvdSB3YW50IHRvIHVzZSBkaWZmZXJlbnQgQXBwbGUgVG91Y2ggSWNvbnMgZm9yIGRpZmZlcmVudCByZXNvbHV0aW9ucyBwbGVhc2VcbnJlZmVyIHRvIHRoZSAiKSxfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9leHRlbmQuaHRtbCNhcHBsZS10b3VjaC1pY29ucyJ9fSxbX3ZtLl92KCJhY2NvcmRpbmcgZG9jdW1lbnRhdGlvbiIpXSksX3ZtLl92KCIuIildLDEpXSksX3ZtLl92KCIgIiksX2MoJ2hyJyksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Il82LTEtYXJjaGl0ZXR0dXJhLWRlbC1zaXRvLXNpc3RlbWEifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi0xLWFyY2hpdGV0dHVyYS1kZWwtc2l0by1zaXN0ZW1hIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuMSBBcmNoaXRldHR1cmEgZGVsIFNpdG8vU2lzdGVtYSIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnKSxfdm0uX3YoIiAiKSxfYygnRmxvd0NoYXJ0Jyx7YXR0cnM6eyJpZCI6ImZsb3djaGFydF82NGE1NTI5YyIsImNvZGUiOl92bS4kZGF0YUJsb2NrLmZsb3djaGFydF82NGE1NTI5YywicHJlc2V0IjoiYW50In19KSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzYtMi1zcGVjaWZpY2hlLWhhcmR3YXJlLWUtY29uZmlndXJhemlvbmUtZGVsLXNlcnZlciJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI182LTItc3BlY2lmaWNoZS1oYXJkd2FyZS1lLWNvbmZpZ3VyYXppb25lLWRlbC1zZXJ2ZXIifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNi4yIFNwZWNpZmljaGUgSGFyZHdhcmUgZSBDb25maWd1cmF6aW9uZSBkZWwgU2VydmVyIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCIoaW5jbHVkaW5nIHRoZSBkZXZlbG9wbWVudCwgc3RhZ2luZyAmIGxpdmUgZW52aXJvbm1lbnRzKSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiXzYtMi0xLXJlcXVpc2l0aS1taW5pbWktc2VydmVyIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjXzYtMi0xLXJlcXVpc2l0aS1taW5pbWktc2VydmVyIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuMi4xIFJlcXVpc2l0aSBNaW5pbWkgU2VydmVyIildKSxfdm0uX3YoIiAiKSxfYygndWwnLHtzdGF0aWNDbGFzczoiY29udGFpbnMtdGFzay1saXN0In0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIERpc2sgU3BhY2UgIiksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczoiQ291bnRlciBiZy1ibHVlIHRleHQtd2hpdGUifSxbX3ZtLl92KCIxR0IrIildKV0pLF92bS5fdigiICIpLF9jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIFdlYiBTZXJ2ZXI6ICIpLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6IkNvdW50ZXIgYmctYmx1ZSB0ZXh0LXdoaXRlIn0sW192bS5fdigiQXBhY2hlIildKSxfdm0uX3YoIiBvciAiKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJDb3VudGVyIGJnLWJsdWUgdGV4dC13aGl0ZSJ9LFtfdm0uX3YoIk5naW54ICIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBEYXRhYmFzZTogTXlTUUwgdmVyc2lvbiAiKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJDb3VudGVyIGJnLWJsdWUgdGV4dC13aGl0ZSJ9LFtfdm0uX3YoIjUuMC4xNSIpXSksX3ZtLl92KCIgb3IgZ3JlYXRlciBvciBhbnkgdmVyc2lvbiBvZiBNYXJpYURCLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgUkFNOiAiKSxfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJDb3VudGVyIGJnLWJsdWUgdGV4dC13aGl0ZSJ9LFtfdm0uX3YoIjUxMk1CKyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBQSFA6ICBWZXJzaW9uICIpLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6IkNvdW50ZXIgYmctYmx1ZSB0ZXh0LXdoaXRlIn0sW192bS5fdigiIDcuMyAiKV0pLF92bS5fdigiIG9yIGdyZWF0ZXIuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBQcm9jZXNzb3I6ICIpLF9jKCdzcGFuJyx7c3RhdGljQ2xhc3M6IkNvdW50ZXIgYmctYmx1ZSB0ZXh0LXdoaXRlIn0sW192bS5fdigiMS4wR0h6KyIpXSldKV0pLF92bS5fdigiICIpLF9jKCdoNCcse2F0dHJzOnsiaWQiOiJfNi0yLTItY29uZmlndXJhemlvbmktc2VydmVyIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjXzYtMi0yLWNvbmZpZ3VyYXppb25pLXNlcnZlciJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LjIuMiBDb25maWd1cmF6aW9uaSBTZXJ2ZXIiKV0pLF92bS5fdigiICIpLF9jKCdicicpLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL2FwYWNoZUNvbmZpZy5odG1sIn19LFtfdm0uX3YoIkFwYWNoZSIpXSksX3ZtLl92KCIgIiksX2MoJ2ltZycse2F0dHJzOnsic3JjIjoiaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvc2VydmVyLWNvbmZpZ3MtYXBhY2hlL3dvcmtmbG93cy9zZXJ2ZXIvYmFkZ2Uuc3ZnIiwiYWx0IjoiVGVzdCJ9fSldLDEpLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL0dBRUNvbmZpZy5odG1sIn19LFtfdm0uX3YoIkdvb2dsZSBBcHAgRW5naW5lIChHQUUpIildKV0sMSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL0RldmVsb3BlcnMvSUlTQ29uZmlnLmh0bWwifX0sW192bS5fdigiSW50ZXJuZXQgSW5mb3JtYXRpb24gU2VydmljZXMoSUlTKSIpXSldLDEpLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdSb3V0ZXJMaW5rJyx7YXR0cnM6eyJ0byI6Ii9EZXZlbG9wZXJzL2xpZ2h0dHBkQ29uZmlnLmh0bWwifX0sW192bS5fdigibGlnaHR0cGQiKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9OZ2lueENvbmZpZy5odG1sIn19LFtfdm0uX3YoIk5naW54IildKSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL2dpdGh1Yi5jb20vaDVicC9zZXJ2ZXItY29uZmlncy1uZ2lueC93b3JrZmxvd3Mvc2VydmVyL2JhZGdlLnN2ZyIsImFsdCI6IlRlc3QifX0pXSwxKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnUm91dGVyTGluaycse2F0dHJzOnsidG8iOiIvRGV2ZWxvcGVycy9Ob2RlanNDb25maWcuaHRtbCJ9fSxbX3ZtLl92KCJOb2RlLmpzIildKSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL3NlY3VyZS50cmF2aXMtY2kub3JnL2g1YnAvc2VydmVyLWNvbmZpZ3Mtbm9kZS5zdmciLCJhbHQiOiJCdWlsZCBTdGF0dXMifX0pXSwxKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJfNi0zLWFsdHJlLXBpYXR0YWZvcm1lLWUtby1hcHBsaWNhemlvbmkifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi0zLWFsdHJlLXBpYXR0YWZvcm1lLWUtby1hcHBsaWNhemlvbmkifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNi4zIEFsdHJlIFBpYXR0YWZvcm1lIGUvbyBBcHBsaWNhemlvbmkiKV0pLF92bS5fdigiICIpLF9jKCdCbGFua1NsYXRlJyxbX2MoJ3AnLFtfdm0uX3YoIihpZiBhcHBsaWNhYmxlLCBXQVAgYW5kIGlUViAoc2V0IHRvcCBjb25maWd1cmF0aW9uKSBzaG91bGQgYmUgZG9jdW1lbnRlZCBpbiB0aGlzIHNlY3Rpb24pIildKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJfNi00LXNwZWNpZmljaGUtc29mdHdhcmUifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi00LXNwZWNpZmljaGUtc29mdHdhcmUifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNi40IFNwZWNpZmljaGUgU29mdHdhcmUiKV0pLF92bS5fdigiICIpLF9jKCdCbGFua1NsYXRlJyxbX2MoJ3AnLFtfdm0uX3YoIihpbmNsdWRpbmcgYXBwbGljYXRpb24gbGFuZ3VhZ2VzLCB3ZWIgc2VydmVyLCBvcGVyYXRpbmcgc3lzdGVtKSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzYtNS1pbnRlZmFjY2UtZGktc2lzdGVtYS1lLXByb2RvdHRpLWRpLXRlcnplLXBhcnRpIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjXzYtNS1pbnRlZmFjY2UtZGktc2lzdGVtYS1lLXByb2RvdHRpLWRpLXRlcnplLXBhcnRpIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuNSBJbnRlZmFjY2UgZGkgU2lzdGVtYSBlIHByb2RvdHRpIGRpIHRlcnplIHBhcnRpIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCIoaW5jbHVkaW5nIGNvbnRlbnQgbWFuYWdlbWVudCBzeXN0ZW0sIHBheW1lbnQgcHJvdmlkZXJzLCBYTUwgbGlua3MsIGRhdGEgdHJhbnNmZXIgcHJvY2Vzc2VzLCBDT00gb2JqZWN0cywgbG9nIGFuYWx5c2lzIHRvb2xzKSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzYtNi1zaWN1cmV6emEifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi02LXNpY3VyZXp6YSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LjYgU2ljdXJlenphIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCIoaW5jbHVkaW5nIGRhdGEgc3RvcmFnZSByZXF1aXJlbWVudHMsIHNlbnNpdGl2aXRpZXMgcGFydGljdWxhciB0byB0aGUgcHJvamVjdCwgY29tbWl0bWVudCwgb3Igbm9uLWNvbW1pdG1lbnQgdG8sIGNvbXBseSB3aXRoIHRoZSBkYXRhIHByb3RlY3Rpb24gbGVnaXNsYXRpb24gKGNvdW50cnkgc3BlY2lmaWMpLCBwdWJsaWMvcHJpdmF0ZSBrZXkgaW5mcmFzdHJ1Y3R1cmUsIFNTTCBjZXJ0aWZpY2F0ZXMsIHZlcnNpb24gY29udHJvbCBhbmQgcmVsZWFzZSBwcm9jZWR1cmVzIGRldGFpbHMsIGRpcmVjdG9yeSBzdHJ1Y3R1cmUgc3RhbmRhcmRzKSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDQnLHthdHRyczp7ImlkIjoiXzYtNi0xLWRhdGEtc3RvcmFnZS1yZXF1aXJlbWVudHMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi02LTEtZGF0YS1zdG9yYWdlLXJlcXVpcmVtZW50cyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LjYuMSBEYXRhIFN0b3JhZ2UgUmVxdWlyZW1lbnRzIildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIkVzdGFibGlzaGluZyBQYXNzd29yZHMgYW5kIEFjY291bnRzIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkxpbWl0aW5nIFBoeXNpY2FsIEFjY2VzcyB0byBDYXJkaG9sZGVyIERhdGEiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU3RvcmluZyBEYXRhIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIk1haW50YWluaW5nIFNlcnZlcnMiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiU2VjdXJpbmcgU2VydmVycyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJEZWNvbW1pc3Npb25pbmcgQ29tcHV0ZXIgU3lzdGVtcyBhbmQgRWxlY3Ryb25pYyBNZWRpYSBEZXZpY2VzIildKV0pLF92bS5fdigiICIpLF9jKCdoNScse2F0dHJzOnsiaWQiOiJfNi02LTEtMi1lc3RhYmxpc2hpbmctcGFzc3dvcmRzLWFuZC1hY2NvdW50cyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI182LTYtMS0yLWVzdGFibGlzaGluZy1wYXNzd29yZHMtYW5kLWFjY291bnRzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuNi4xLjIgRXN0YWJsaXNoaW5nIFBhc3N3b3JkcyBhbmQgQWNjb3VudHMiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBbGwgcGFzc3dvcmRzIHRvIHN5c3RlbXMgdGhhdCBhY2Nlc3MgY3JlZGl0IGNhcmQgaW5mb3JtYXRpb24vdHJhbnNhY3Rpb25zIG11c3QgY29uZm9ybSB0byBDb21wYW55IFtwYXNzd29yZCBjb21wbGV4aXR5IGd1aWRlbGluZXNdLiBQYXNzd29yZHMgbXVzdCBiZSBzZXQgdG8gZXhwaXJlIGFmdGVyIG5vIGxvbmdlciB0aGFuIDkwIGRheXMgYW5kIG11c3QgYmUgY2hhbmdlZC4gVXNlcnMgY2Fubm90IHN1Ym1pdCBhIG5ldyBwYXNzd29yZCB0aGF0IGlzIHRoZSBzYW1lIGFzIGFueSBvZiB0aGUgbGFzdCBmb3VyIHBhc3N3b3JkcyB0aGV5IGhhdmUgdXNlZC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJXaGVyZXZlciBwYXNzd29yZHMgYXJlIHN0b3JlZCwgdGhleSBhcmUgc3Ryb25nbHkgZW5jcnlwdGVkLiBTdHJvbmcgZW5jcnlwdGlvbiBpcyBkZWZpbmVkIGFzIGNyeXB0b2dyYXBoeSBiYXNlZCBvbiBpbmR1c3RyeS10ZXN0ZWQgYW5kIGFjY2VwdGVkIGFsZ29yaXRobXMsIGFsb25nIHdpdGggc3Ryb25nIGtleSBsZW5ndGhzIGFuZCBwcm9wZXIga2V5LW1hbmFnZW1lbnQgcHJhY3RpY2VzLiBDcnlwdG9ncmFwaHkgaXMgYSBtZXRob2QgdG8gcHJvdGVjdCBkYXRhIGFuZCBpbmNsdWRlcyBib3RoIGVuY3J5cHRpb24gKHdoaWNoIGlzIHJldmVyc2libGUpIGFuZCBoYXNoaW5nICh3aGljaCBpcyBub3QgcmV2ZXJzaWJsZSwgb3Igw4TDum9uZSB3YXnigJogw4TDuSkuIFNIQS0xIGlzIGFuIGV4YW1wbGUgb2YgYW4gaW5kdXN0cnktdGVzdGVkIGFuZCBhY2NlcHRlZCBoYXNoaW5nIGFsZ29yaXRobS4gRXhhbXBsZXMgb2YgaW5kdXN0cnktdGVzdGVkIGFuZCBhY2NlcHRlZCBzdGFuZGFyZHMgYW5kIGFsZ29yaXRobXMgZm9yIGVuY3J5cHRpb24gaW5jbHVkZSBBRVMgKDEyOCBiaXRzIGFuZCBoaWdoZXIpLCBUREVTIChtaW5pbXVtIGRvdWJsZS1sZW5ndGgga2V5cyksIFJTQSAoMTAyNCBiaXRzIGFuZCBoaWdoZXIpLCBFQ0MgKDE2MCBiaXRzIGFuZCBoaWdoZXIpLCBhbmQgRWxHYW1hbCAoMTAyNCBiaXRzIGFuZCBoaWdoZXIpLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgU3RhbmRhcmRzIGFuZCBUZWNobm9sb2d5IChOSVNUKSAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vY3NyYy5uaXN0Lmdvdi9wdWJsaWNhdGlvbnMvIiwidGFyZ2V0IjoiX3NlbGYiLCJyZWwiOiIifX0sW192bS5fdigiU3BlY2lhbCBQdWJsaWNhdGlvbiA4MDAtNTciKV0pLF92bS5fdigiLiIpXSksX3ZtLl92KCIgIiksX2MoJ2g2Jyx7YXR0cnM6eyJpZCI6InJlcXVpcmVtZW50cy1mb3ItY29tcGxpYW5jZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3JlcXVpcmVtZW50cy1mb3ItY29tcGxpYW5jZSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBSZXF1aXJlbWVudHMgZm9yIENvbXBsaWFuY2UqKiIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJSZXZpZXcgYW5kIHJlbW92ZSB1bm5lY2Vzc2FyeSBhY2NvdW50cyBmcm9tIHRoZSBsaXN0IG9mIHVzZXIgYWNjb3VudHMiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiQ2hhbmdlIGFsbCBkZWZhdWx0IG9yIHZlbmRvci1zdXBwbGllZCBwYXNzd29yZHMsIGVuY3J5cHRpb24ga2V5cywgYW5kIFNOTVAgY29tbXVuaXR5IHN0cmluZ3MiKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiRG8gbm90IHNoYXJlIHVzZXIgYWNjb3VudHMuIEVhY2ggdXNlciBtdXN0IGhhdmUgYSB1bmlxdWUgYWNjb3VudCIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJMaW1pdCByZXBlYXRlZCBmYWlsZWQgYWNjZXNzIGF0dGVtcHRzIHRvIG5vIG1vcmUgdGhhbiBzaXguIEFmdGVyIHNpeCBmYWlsZWQgYXR0ZW1wdHMsIHRoZSBhY2NvdW50IG11c3QgYmUgbG9ja2VkIGZvciBubyBsZXNzIHRoYW4gMzAgbWludXRlcyBvciB1bnRpbCBhbiBhZG1pbmlzdHJhdG9yIGVuYWJsZXMgdGhlIHVzZXIgYWNjb3VudCIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJSZXF1aXJlIHVzZXJzIHRvIHJlLWVudGVyIHRoZWlyIHBhc3N3b3JkcyB0byByZWFjdGl2YXRlIHNlc3Npb25zIHRoYXQgYXJlIGlkbGUgZm9yIG1vcmUgdGhhbiAxNSBtaW51dGVzLiBGb3IgZXhhbXBsZSwgdXNlIHBhc3N3b3JkLXByb3RlY3RlZCBzY3JlZW4gc2F2ZXJzIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkF1dGhlbnRpY2F0ZSBhbGwgYWNjZXNzIHRvIGFueSBkYXRhYmFzZSBjb250YWluaW5nIGNhcmRob2xkZXIgZGF0YSwgaW5jbHVkaW5nIGFjY2VzcyBieSBhcHBsaWNhdGlvbnMsIGFkbWluaXN0cmF0b3JzLCBhbmQgYWxsIHVzZXJzIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkNvbW11bmljYXRlIHRoZSBydWxlcyByZWdhcmRpbmcgcGFzc3dvcmRzIGFuZCBhY2NvdW50IG1hbmFnZW1lbnQgdG8gdXNlcnMgZHVyaW5nIHRoZWlyIHllYXJseSBQQ0kgdHJhaW5pbmciKV0pXSksX3ZtLl92KCIgIiksX2MoJ2g1Jyx7YXR0cnM6eyJpZCI6Il82LTYtMS0zLXNlY3VyZS1hbGwtbWVkaWEifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi02LTEtMy1zZWN1cmUtYWxsLW1lZGlhIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuNi4xLjMgU2VjdXJlIEFsbCBNZWRpYSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlN0b3JlIG1lZGlhIGJhY2stdXAgaW4gYSBzZWN1cmUgb2ZmLXNpdGUgbG9jYXRpb24uIFJldmlldyB0aGUgbG9jYXRpb27igJlzIHNlY3VyaXR5IGF0IGxlYXN0IGFubnVhbGx5XG5QaHlzaWNhbGx5IHNlY3VyZSBhbGwgcGFwZXIgYW5kIGVsZWN0cm9uaWMgbWVkaWEgdGhhdCBjb250YWluIGNhcmRob2xkZXIgZGF0YVxuTWFpbnRhaW4gc3RyaWN0IGNvbnRyb2wgb3ZlciB0aGUgaW50ZXJuYWwgb3IgZXh0ZXJuYWwgZGlzdHJpYnV0aW9uIG9mIGFueSBraW5kIG9mIG1lZGlhIHRoYXQgY29udGFpbnMgY2FyZGhvbGRlciBkYXRhIGJ5IHRoZSBmb2xsb3dpbmcgbWVhbnM6XG5DbGFzc2lmeSBtZWRpYSBzbyBpdCBjYW4gYmUgaWRlbnRpZmllZCBhcyBjb25maWRlbnRpYWxcblNoaXAgbWVkaWEgYnkgc2VjdXJlZCBjb3VyaWVyIG9yIG90aGVyIGRlbGl2ZXJ5IG1ldGhvZCB0aGF0IGNhbiBiZSBhY2N1cmF0ZWx5IHRyYWNrZWRcbk9idGFpbiBtYW5hZ2VtZW50IGFwcHJvdmFsIGZvciBtb3ZpbmcgYW55IGFuZCBhbGwgbWVkaWEgY29udGFpbmluZyBjYXJkaG9sZGVyIGRhdGEgZnJvbSBhIHNlY3VyZWQgYXJlYSAoZXNwZWNpYWxseSB3aGVuIG1lZGlhIGlzIGRpc3RyaWJ1dGVkIHRvIGluZGl2aWR1YWxzKVxuTWFpbnRhaW4gc3RyaWN0IGNvbnRyb2wgb3ZlciB0aGUgc3RvcmFnZSBhbmQgYWNjZXNzaWJpbGl0eSBvZiBtZWRpYSB0aGF0IGNvbnRhaW5zIGNhcmRob2xkZXIgZGF0YVxuUHJvcGVybHkgbWFpbnRhaW4gaW52ZW50b3J5IGxvZ3Mgb2YgYWxsIG1lZGlhIGFuZCBjb25kdWN0IG1lZGlhIGludmVudG9yaWVzIGF0IGxlYXN0IGFubnVhbGx5XG5TaHJlZCwgaW5jaW5lcmF0ZSwgb3IgcHVscCBoYXJkLWNvcHkgbWF0ZXJpYWxzIHNvIHRoYXQgY2FyZGhvbGRlciBkYXRhIGNhbm5vdCBiZSByZWNvbnN0cnVjdGVkXG5SZW5kZXIgY2FyZGhvbGRlciBkYXRhIG9uIGVsZWN0cm9uaWMgbWVkaWEgdW5yZWNvdmVyYWJsZSBzbyB0aGF0IGNhcmRob2xkZXIgZGF0YSBjYW5ub3QgYmUgcmVjb25zdHJ1Y3RlZCIpXSksX3ZtLl92KCIgIiksX2MoJ2g1Jyx7YXR0cnM6eyJpZCI6Il82LTYtMS00LXN0b3JpbmctZGF0YSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI182LTYtMS00LXN0b3JpbmctZGF0YSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LjYuMS40IFN0b3JpbmcgRGF0YSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRvIG1haW50YWluIGNvbXBsaWFuY2Ugd2l0aCBQQ0kgRFNTLCB1bml0cyBtdXN0IG5ldmVyIHN0b3JlIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiByZWxhdGluZyB0byBjcmVkaXQgY2FyZCB0cmFuc2FjdGlvbnMuIFVuaXRzIHNob3VsZCBhbmFseXplIGNhcmVmdWxseSB3aHkgaXQgaXMg4oCcbmVjZXNzYXJ54oCdIHRvIGtlZXAgZGF0YSB0aGF0IHJlcXVpcmVzIGVuY3J5cHRpb24sIGZpcmV3YWxsaW5nLCBzcGVjaWFsIGhhbmRsaW5nLCBhbmQgc3RyaWN0IGFkaGVyZW5jZSB0byByZXN0cmljdGl2ZSBidXNpbmVzcyBwcmFjdGljZXMgYW5kIGV4cGFuc2l2ZSB0ZWNobmljYWwgc29sdXRpb25zLiBUaG9yb3VnaGx5IGV4cGxvcmUgb3RoZXIgbWVhbnMgdG8gYWNoaWV2ZSB0aGUgc2FtZSBnb2FscyB3aXRob3V0IHN0b3Jpbmcgc2Vuc2l0aXZlIGRhdGEgYW5kL29yIGNvbnN1bHQgdGhlIENhc2ggTWFuYWdlbWVudCBPZmZpY2UuIildKSxfdm0uX3YoIiAiKSxfYygnaDUnLHthdHRyczp7ImlkIjoiXzYtNi0xLTUtY29sbGVjdGluZy1kYXRhIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjXzYtNi0xLTUtY29sbGVjdGluZy1kYXRhIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuNi4xLjUgQ29sbGVjdGluZyBEYXRhIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIENhcmQgVmVyaWZpY2F0aW9uIENvZGUgb3IgVmFsdWUgKCBDVkMsIENWViwgZXQgYWwuKSBpcyBvbmx5IG5lY2Vzc2FyeSB3aGVuIHlvdXIgY3VzdG9tZXIgaXMgZW50ZXJpbmcgaXQgb24geW91ciBXZWIgc2l0ZS4gVW5pdHMgYXJlIHByb2hpYml0ZWQgZnJvbSBhc2tpbmcgZm9yIHRoaXMgaW5mb3JtYXRpb24gd2hlbiBkZXNpZ25pbmcgcGFtcGhsZXRzIG9yIGFueSBtYXRlcmlhbHMgdGhhdCBnbyBvdXQgdG8gcHJvc3BlY3RpdmUgY3VzdG9tZXJzLiBSZWZlciB0byB0aGUgRGF0YSBUaGF0IE11c3QgTmV2ZXIgQmUgU3RvcmVkIGJlbG93LiBJZiB5b3UgY3VycmVudGx5IGhhdmUgZm9ybXMsIGxpdGVyYXR1cmUsIGV0Yy4gdGhhdCByZXF1ZXN0cyB0aGlzIGluZm9ybWF0aW9uLCB5b3UgbXVzdCBhbWVuZCBhbmQgZWxpbWluYXRlIHRoYXQgcmVxdWVzdC4iKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWJsb2NrIHRpcCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJjdXN0b20tYmxvY2stdGl0bGUifSxbX3ZtLl92KCJEYXRhIFRoYXQgTXVzdCBOZXZlciBCZSBTdG9yZWQiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJGdWxsIGNvbnRlbnRzIG9mIGFueSB0cmFjayBmcm9tIGEgbWFnbmV0aWMgc3RyaXBlXG5DYXJkIFZlcmlmaWNhdGlvbiBDb2RlcyBvciBWYWx1ZXMgKENBVjIvQ1ZDMi9DVlYyL0NJRCBudW1iZXJzKSDigJMgdGhlIHRocmVlIGRpZ2l0IG51bWJlciBmcm9tIGJhY2sgb2YgdGhlIGNhcmRcblBlcnNvbmFsIElkZW50aWZpY2F0aW9uIE51bWJlciAoUElOL1BJTiBCbG9jaylcbk5vdGU6IEZvciBmdXJ0aGVyIGRldGFpbHMsIHNlZSBVbml2ZXJzaXR5IFBvbGljeSAzLjE3LCBBY2NlcHRpbmcgQ3JlZGl0IENhcmRzIHRvIENvbmR1Y3QgVW5pdmVyc2l0eSBCdXNpbmVzcy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20tYmxvY2sgdGlwIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jay10aXRsZSJ9LFtfdm0uX3YoIkRhdGEgVGhhdCBDYW4gQmUgU3RvcmVkIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIGxhc3QgZm91ciBkaWdpdHMgb2YgdGhlIHByaW1hcnkgYWNjb3VudCBudW1iZXIgKFBBTikgLSB0aGUgbnVtYmVyIG11c3QgYmUgbWFza2VkIGV4Y2VwdCBmb3IgdGhlIGxhc3QgZm91ciBkaWdpdHMgYW55d2hlcmUgaXQgaXMgc3RvcmVkICh0aGlzIGluY2x1ZGVzIGFsbCBwb3J0YWJsZSBkZXZpY2VzLCBsb2dzLCBiYWNrdXAgbWVkaWEsIEEvUCBzeXN0ZW1zLCBldGMuKS4gVGhpcyBpbmZvcm1hdGlvbiBtYXkgYmUgc3RvcmVkIGluIHRoZSBmb2xsb3dpbmcgd2F5czpcbk9uZS13YXkgaGFzaGVzIGJhc2VkIG9uIHN0cm9uZyBjcnlwdG9ncmFwaHlcblRydW5jYXRpb25cbkluZGV4IHRva2VucyBhbmQgcGFkcyAocGFkcyBtdXN0IGJlIHNlY3VyZWx5IHN0b3JlZClcblN0cm9uZyBjcnlwdG9ncmFwaHkgd2l0aCBhc3NvY2lhdGVkIGtleS1tYW5hZ2VtZW50IHByb2Nlc3NlcyBhbmQgcHJvY2VkdXJlc1xuUHJvdGVjdGluZyBTdG9yZWQgRGF0YVxuVW5pdHMgc2hvdWxkIGNvbnN1bHQgd2l0aCB0ZWNobmljYWwgc3RhZmYgdG8gaW1wbGVtZW50IHRoZSByZXF1aXJlbWVudHMgZm9yIHN0b3JpbmcgZGF0YSBzZWN1cmVseS4gVGhlIG1pbmltdW0gYWNjb3VudCBpbmZvcm1hdGlvbiB0aGF0IG11c3QgYmUgcmVuZGVyZWQgdW5yZWFkYWJsZSBpcyB0aGUgUEFOLiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVW5pdHMgbXVzdCBwcm90ZWN0IGNyeXB0b2dyYXBoaWMga2V5cyB1c2VkIGZvciBlbmNyeXB0aW9uIG9mIGNhcmRob2xkZXIgZGF0YSBhZ2FpbnN0IGJvdGggZGlzY2xvc3VyZSBhbmQgbWlzdXNlOiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlJlc3RyaWN0IGFjY2VzcyB0byBjcnlwdG9ncmFwaGljIGtleXMgdG8gdGhlIGZld2VzdCBudW1iZXIgb2YgY3VzdG9kaWFucyBuZWNlc3NhcnlcblN0b3JlIGNyeXB0b2dyYXBoaWMga2V5cyBzZWN1cmVseSBpbiB0aGUgZmV3ZXN0IHBvc3NpYmxlIGxvY2F0aW9ucyBhbmQgZm9ybXNcblVuaXRzIG11c3QgYWxzbyBmdWxseSBkb2N1bWVudCBhbmQgaW1wbGVtZW50IGFsbCBrZXktbWFuYWdlbWVudCBwcm9jZXNzZXMgYW5kIHByb2NlZHVyZXMsIGluY2x1ZGluZyB0aGUgZ2VuZXJhdGlvbiwgZGlzdHJpYnV0aW9uLCBhbmQgc3RvcmFnZSBvZiBzZWN1cmUgY3J5cHRvZ3JhcGhpYyBrZXlzIHVzZWQgZm9yIGVuY3J5cHRpbmcgY2FyZGhvbGRlciBkYXRhLiIpXSksX3ZtLl92KCIgIiksX2MoJ2g1Jyx7YXR0cnM6eyJpZCI6Il82LTYtMS02LWNvbGxlY3RpbmctZGF0YS1tYWludGFpbmluZy1zZXJ2ZXJzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjXzYtNi0xLTYtY29sbGVjdGluZy1kYXRhLW1haW50YWluaW5nLXNlcnZlcnMifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNi42LjEuNiBDb2xsZWN0aW5nIERhdGEgTWFpbnRhaW5pbmcgU2VydmVycyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFsbCBzeXN0ZW1zIHN0b3JpbmcgY2FyZGhvbGRlciBkYXRhIG11c3QgaGF2ZSB0aGUgZm9sbG93aW5nOiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFudGl2aXJ1cyBzb2Z0d2FyZSB0aGF0IGlzIHJlZ3VsYXJseSB1cGRhdGVkIChpZiBhdmFpbGFibGUgZm9yIHRoZSBPUykuXG5GaXJld2FsbCBzb2Z0d2FyZSwgZWl0aGVyIHRoZSBkZWZhdWx0IGZpcmV3YWxsIGluY2x1ZGVkIHdpdGggdGhlIG9wZXJhdGluZyBzeXN0ZW0gb3IgYSB0aGlyZC1wYXJ0eSBwYWNrYWdlLlxuSW50cnVzaW9uIGRldGVjdGlvbiBzb2Z0d2FyZS4gIChUaGlzIGNhbiBiZSBjb3VwbGVkIHdpdGggdGhlIGZpcmV3YWxsIHNvZnR3YXJlLilcbkludGVncml0eSBtb25pdG9yaW5nIHNvZnR3YXJlLCBzdWNoIGFzIFRyaXB3aXJlLCB0aGF0IGFyZSBtb25pdG9yaW5nIGNyaXRpY2FsIHN5c3RlbSBmaWxlcy5cbkFkZGl0aW9uYWxseSwgc3lzdGVtIHBhc3N3b3JkcyBtdXN0IGNvbmZvcm0gdG8gdGhlIHJ1bGVzIHN0YXRlZCBpbiBVbml2ZXJzaXR5IFBvbGljeSAzLjE3LCBBY2NlcHRpbmcgQ3JlZGl0IENhcmRzIHRvIENvbmR1Y3QgVW5pdmVyc2l0eSBCdXNpbmVzcy4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTeXN0ZW0gTWFpbnRlbmFuY2UgUmVxdWlyZW1lbnRzXG5PcGVyYXRpbmcgc3lzdGVtcyBhbmQgYXBwbGljYXRpb25zIG11c3QgYmUgcmVndWxhcmx5IHVwZGF0ZWQgd2l0aCB2ZW5kb3Itc3VwcGxpZWQgY3JpdGljYWwgc2VjdXJpdHkgcGF0Y2hlcyB3aXRoaW4gb25lIG1vbnRoIG9mIHRoZSBwYXRjaGVzIGJlaW5nIHB1Ymxpc2hlZC4gQWxsIHBhdGNoZXMgbXVzdCBiZSB0ZXN0ZWQgYmVmb3JlIHRoZXkgYXJlIGRlcGxveWVkLlxuQW55IHN5c3RlbSB1c2VkIHRvIHByb2Nlc3MgY3JlZGl0IGNhcmQgdHJhbnNhY3Rpb25zIG11c3QgYmUgZGVkaWNhdGVkIHRvIHByb2Nlc3NpbmcgY3JlZGl0IGNhcmRzLiBUaGVzZSBzeXN0ZW1zIG11c3Qgbm90IGJlIHVzZWQgYXMgZ2VuZXJhbCBwcm9kdWN0aXZpdHkgc3lzdGVtcy4gQWNjZXNzIHRvIHRoZXNlIHN5c3RlbXMgbXVzdCBiZSByZXN0cmljdGVkIG9ubHkgdG8gdGhvc2Ugc3RhZmYgbWVtYmVycyB3aG9zZSBqb2IgcmVxdWlyZXMgc3VjaCBhY2Nlc3MuIFBoeXNpY2FsIHNlY3VyaXR5IHRvIHRoZXNlIHN5c3RlbXMgbXVzdCBiZSByZXN0cmljdGVkIGFuZCBtb25pdG9yZWQuXG5TeXN0ZW0gbG9nZ2luZyBtdXN0IGJlIGVuYWJsZWQgYW5kIHJldmlld2VkIHJlZ3VsYXJseS4gRm9yIGV4YW1wbGUsIGZvciBXaW5kb3dzIHN5c3RlbXMsIHRoZSBTeXN0ZW0sIEFwcGxpY2F0aW9uLCBhbmQgU2VjdXJpdHkgbG9ncyBtdXN0IGJlIGVuYWJsZWQuIFRoZSBhdWRpdCBoaXN0b3J5IG11c3QgYmUgbWFpbnRhaW5lZCBmb3Igb25lIHllYXIsIHdpdGggYXQgbGVhc3QgdGhyZWUgbW9udGhzIGF2YWlsYWJsZSBmb3IgaW1tZWRpYXRlIGFuYWx5c2lzLiBBcHBsaWNhdGlvbiBsb2dnaW5nIGZvciBXZWIgYW5kIGRhdGFiYXNlIGFwcGxpY2F0aW9ucyBtdXN0IGJlIGVuYWJsZWQgYW5kIGFjdGl2ZWx5IG1vbml0b3JlZC5cblN5c3RlbSBjbG9ja3MgbXVzdCBiZSBzeW5jaHJvbml6ZWQgdmlhIE5ldHdvcmsgVGltZSBQcm90b2NvbCAoTlRQKS5cblNlcnZlcnMgbXVzdCBiZSBzY2FubmVkIGZvciB2dWxuZXJhYmlsaXRpZXMgcXVhcnRlcmx5LiBUaGlzIHNjYW4gaW5jbHVkZXMgc2NhbnMgZm9yIHZ1bG5lcmFiaWxpdGllcyBpbiB0aGUgb3BlcmF0aW5nIHN5c3RlbSBhcyB3ZWxsIGFzIGluIGFueSBzZXJ2aWNlcyBydW5uaW5nIG9uIHRoZSBzeXN0ZW0sIHN1Y2ggYXMgV2ViIGFwcGxpY2F0aW9ucy5cbkVhY2ggc2VydmVyIG11c3QgaGF2ZSBvbmx5IG9uZSBwcmltYXJ5IGZ1bmN0aW9uLlxuQWxsIHVubmVjZXNzYXJ5IGZ1bmN0aW9uYWxpdHkgbXVzdCBiZSBkaXNhYmxlZCBvciByZW1vdmVkLlxuVGhlIHN5c3RlbSBzZWN1cml0eSBtdXN0IGJlIGNvbmZpZ3VyZWQgYmFzZWQgb24gY3VycmVudCBiZXN0IHByYWN0aWNlcy5cbkFsbCBub24tY29uc29sZSBhZG1pbmlzdHJhdGl2ZSBhY2Nlc3MgbXVzdCBiZSBlbmNyeXB0ZWQuXG5TZXJ2ZXJzIG11c3QgYmUgaG91c2VkIGluIGEgcGh5c2ljYWxseSBzZWN1cmUgZW52aXJvbm1lbnQuXG5Ub3AiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTZWN1cmluZyBTZXJ2ZXJzXG5TZXJ2ZXJzIG11c3QgYmUgaG91c2VkIGluIHRoZSBDSVQgc2VydmVyIGZhcm0uIElmIHNlcnZlcnMgYXJlIG5vdCBob3VzZWQgaW4gdGhlIENJVCBzZXJ2ZXIgZmFybSwgdGhleSBtdXN0IGJlIGhvdXNlZCBpbiBhIGZhY2lsaXR5IHRoYXQgcmVzdHJpY3RzIHBoeXNpY2FsIGFjY2VzcyBzdWNoIHRoYXQ6IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiT25seSB0aG9zZSBzdGFmZiBtZW1iZXJzIHdob3NlIGpvYiByZXF1aXJlcyBzdWNoIGFjY2VzcyBjYW4gZ2FpbiBhY2Nlc3MgdG8gdGhlIHN5c3RlbXNcbkFsbCBhY2Nlc3NlcyBhcmUgbG9nZ2VkIGFuZC9vciBtb25pdG9yZWQgdGhyb3VnaCBjYXJkIGFjY2VzcyBzeXN0ZW1zLCB2aWRlbyBjYW1lcmFzLCBldGMuXG5WaXNpdG9ycyBhcmUgbG9nZ2VkIGFuZCBoYXZlIGEgdG9rZW4gaW5kaWNhdGluZyB0aGV5IGFyZSB2aXNpdG9yc1xuQmFjay11cCBtZWRpYSBpcyBsb2dnZWQsIHN0b3JlZCB3aXRoaW4gYSBzZWN1cmUgZW52aXJvbm1lbnQsIGFuZCBkZXN0cm95ZWQgYmFzZWQgb24gYSBwcmVkZXRlcm1pbmVkIHNjaGVkdWxlIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRGVjb21taXNzaW9uaW5nIENvbXB1dGVyIFN5c3RlbXMgYW5kIEVsZWN0cm9uaWMgTWVkaWEgRGV2aWNlc1xuUGxlYXNlIHJlZmVyIHRvIFwiRGVjb21taXNzaW9uaW5nIG9mIENvbXB1dGVyIFN5c3RlbXMgYW5kIEVsZWN0cm9uaWMgTWVkaWEgRGV2aWNlc1wiIGluIHRoZSBQcm9jZWR1cmVzIG9mIFVuaXZlcnNpdHkgUG9saWN5IDMuMTcsIEFjY2VwdGluZyBDcmVkaXQgQ2FyZHMgdG8gQ29uZHVjdCBVbml2ZXJzaXR5IEJ1c2luZXNzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Il82LTctZGV2ZWxvcG1lbnQtc3RhbmRhcmRzLWNvbXBsaWFuY2UifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi03LWRldmVsb3BtZW50LXN0YW5kYXJkcy1jb21wbGlhbmNlIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuNyBEZXZlbG9wbWVudCBTdGFuZGFyZHMgJiBDb21wbGlhbmNlIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCIoaW5jbHVkaW5nIGZpbGUgdHlwZXMgYmVpbmcgdXNlZCwgZmlsZSBuYW1pbmcgc3RhbmRhcmRzLCBjb250ZW50IGFuZCBhcHBsaWNhdGlvbiBkaXJlY3Rvcnkgc3RydWN0dXJlcyBhbmQgbmFtaW5nIGNvbnZlbnRpb25zIHRvIGJlIHVzZWQgKGZvciBib3RoIGNsaWVudCBhbmQgc2VydmVyIHNpZGUgdG9nZXRoZXIpKSIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzYtOC1jb25maWd1cmF0aW9uLW1hbmFnZW1lbnQifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNi04LWNvbmZpZ3VyYXRpb24tbWFuYWdlbWVudCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA2LjggQ29uZmlndXJhdGlvbiBNYW5hZ2VtZW50IildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCIoaW5jbHVkaW5nIHRoZSBwcm9jZXNzIHRvIG1haW50YWluIHZlcnNpb24gY29udHJvbCBvZiB0aGUgc29mdHdhcmUgZnJvbSB0aGUgZGV2ZWxvcG1lbnQsIHN0YWdpbmcgYW5kIHRocm91Z2ggdG8gdGhlIHByb2R1Y3Rpb24gZW52aXJvbm1lbnQpIildKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJfNi05LWJhY2t1cC1yZWNvdmVyeSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI182LTktYmFja3VwLXJlY292ZXJ5In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDYuOSBCYWNrdXAgJiBSZWNvdmVyeSIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiXzctdXNlci1pbnRlcmZhY2Utc3BlY2lmaWNhdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI183LXVzZXItaW50ZXJmYWNlLXNwZWNpZmljYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgNy4gVXNlciBJbnRlcmZhY2UgU3BlY2lmaWNhdGlvbiIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQ29udGFpbnM6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLHtzdGF0aWNDbGFzczoiY29udGFpbnMtdGFzay1saXN0In0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBEZXRhaWxlZCB0ZWNobmljYWwgYW5hbHlzaXMgb2YgdGhlIHVzZXIgaW50ZXJmYWNlIHJlbGF0aW5nIGJhY2sgdG8gdGhlIEZ1bmN0aW9uYWwgU3BlY2lmaWNhdGlvbjoiKV0pLF92bS5fdigiICIpLF9jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBWYWxpZGF0aW9uIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgSWRlbnRpZmljYXRpb24gb2YgZHluYW1pYyBjb250ZW50IildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgIiksX2MoJ1JvdXRlckxpbmsnLHthdHRyczp7InRvIjoiL0RldmVsb3BlcnMvZGV2ZWxvcGVycy9jc3MuaHRtbCJ9fSxbX3ZtLl92KCJTdHlsZSBzaGVldHMiKV0pXSwxKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgQXBwbGljYXRpb24gb2JqZWN0cyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIEZ1bmN0aW9ucyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9jb2RleC53b3JkcHJlc3Mub3JnL0NsYXNzX1JlZmVyZW5jZS93cGRiIiwidGFyZ2V0IjoiX3NlbGYiLCJyZWwiOiIifX0sW192bS5fdigiRGF0YWJhc2Ugb2JqZWN0cyIpXSldKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2NvZGV4LndvcmRwcmVzcy5vcmcvQ2xhc3NfUmVmZXJlbmNlL3dwZGIiLCJ0YXJnZXQiOiJfc2VsZiIsInJlbCI6IiJ9fSxbX3ZtLl92KCJUZW1wbGF0ZSBpbmNsdWRlIildKSxfdm0uX3YoIiBmaWxlcyBhbmQgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDQvcHJlc2VudC9mcmFtZXMuaHRtbCIsInRhcmdldCI6Il9zZWxmIiwicmVsIjoiIn19LFtfdm0uX3YoImZyYW1lc2V0IildKSxfdm0uX3YoIiBkZWZpbml0aW9ucyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIFNjcmVlbiBncmFicy9hY2Nlc3MgdG8gYXNzZXRzLCBnaXZlIGV4YW1wbGVzIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgU2NyZWVuIHJlc29sdXRpb25zL2Rpc3BsYXkgcHJvcGVydGllcyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIFBhZ2Ugd2VpZ2h0cyIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIEFueSBvdGhlciBtdWx0aW1lZGlhIG9iamVjdHMgdXNlZCIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiXzctMS11c2VyLWFnZW50LXNwZWNpZmljYXRpb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfNy0xLXVzZXItYWdlbnQtc3BlY2lmaWNhdGlvbiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA3LjEgVXNlciBBZ2VudCBzcGVjaWZpY2F0aW9uIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScsW19jKCdwJyxbX3ZtLl92KCJpbmNsdWRpbmcgYnJvd3NlcnMgKHZlcnNpb25zIHRvIGJlIHN1cHBvcnRlZCBhbmQgdGhlIGFwcGxpY2F0aW9ucyBsaW1pdGF0aW9ucykgJiBvcGVyYXRpbmcgc3lzdGVtcykiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Il83LTItdXNlci1pbnRlcmZhY2UtZGVzaWduLWFuZC1kZXZlbG9wbWVudCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI183LTItdXNlci1pbnRlcmZhY2UtZGVzaWduLWFuZC1kZXZlbG9wbWVudCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiA3LjIgVXNlciBJbnRlcmZhY2UgRGVzaWduIGFuZCBEZXZlbG9wbWVudCIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnLFtfYygncCcsW192bS5fdigiKGluY2x1ZGluZyBpbmZvcm1hdGlvbiBvbiBKYXZhU2NyaXB0IGFuZCBjbGllbnQgc2lkZSB2YWxpZGF0aW9uLCBzZXJ2ZXIgcGFnZSBpbnRlZ3JhdGlvbiAmIHN0eWxlIHNoZWV0cykiKV0pXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6Il84LXRlY2huaWNhbC1kZXNpZ24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfOC10ZWNobmljYWwtZGVzaWduIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDguIFRlY2huaWNhbCBEZXNpZ24iKV0pLF92bS5fdigiICIpLF9jKCdCbGFua1NsYXRlJyksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkNvbnRhaW5zOiIpXSksX3ZtLl92KCIgIiksX2MoJ3VsJyx7c3RhdGljQ2xhc3M6ImNvbnRhaW5zLXRhc2stbGlzdCJ9LFtfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgRGV0YWlscyBob3cgdGhlIGVudmlyb25tZW50IGZvciB0aGUgYXBwbGljYXRpb24gd2lsbCBiZSBwcm9kdWNlZDoiKV0pLF92bS5fdigiICIpLF9jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBBcHBsaWNhdGlvbiBEZXNpZ24gYW5kIERldmVsb3BtZW50IChpbmNsdWRpbmcgYXBwbGljYXRpb24gbGF5ZXIgY29kaW5nLCBkYXRhYmFzZSBkZXNpZ24gYW5kIGRldmVsb3BtZW50IChpbmNsdWRpbmcgZW50aXR5LXJlbGF0aW9uc2hpcCBkaWFncmFtLCBlbnRpdHkgLSBbWF1kZWZpbml0aW9ucywgc3RvcmVkIHByb2NlZHVyZXMgKHBzZXVkbyBjb2RlKSksIGNsYXNzIGRpYWdyYW1zIildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgU3BlY2lhbCBOb3RlcyAoZGV0YWlscyBvZiBhbnkgdW51c3VhbCByZXF1aXJlbWVudHMgb3IgYXNwZWN0cyB0byB0aGUgYXBwbGljYXRpb24gZW52aXJvbm1lbnQpIildKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJfOS1pbnRlZ3JhdGlvbiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI185LWludGVncmF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIDkuIEludGVncmF0aW9uIildKSxfdm0uX3YoIiAiKSxfYygnQmxhbmtTbGF0ZScpLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJDb250YWluczoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcse3N0YXRpY0NsYXNzOiJjb250YWlucy10YXNrLWxpc3QifSxbX2MoJ2xpJyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtIn0sW19jKCdpbnB1dCcse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveCIsYXR0cnM6eyJjaGVja2VkIjoiIiwiZGlzYWJsZWQiOiIiLCJ0eXBlIjoiY2hlY2tib3gifX0pLF92bS5fdigiIEEgZGVzY3JpcHRpb24gb2YgaG93IHRoZSB2YXJpb3VzIHRlY2huaWNhbCBzZXJ2aWNlIHRlYW1zIGFuZCB0aGlyZCBwYXJ0aWVzIGludm9sdmVkIGluIHRoZSBwcm9qZWN0IHdpbGwgd29yayB0b2dldGhlciBjby1vcmRpbmF0aW5nIHRoZWlyIHdvcmsgYW5kIGludGVncmF0aW5nIGl0IGludG8gdGhlIG92ZXJhbGwgc29sdXRpb246IildKSxfdm0uX3YoIiAiKSxfYygnbGknLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0ifSxbX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6InRhc2stbGlzdC1pdGVtLWNoZWNrYm94IixhdHRyczp7ImNoZWNrZWQiOiIiLCJkaXNhYmxlZCI6IiIsInR5cGUiOiJjaGVja2JveCJ9fSksX3ZtLl92KCIgVGhpcmQgUGFydHkgcmVsYXRpb25zaGlwcyIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiXzEwLWFwcGVuZGljZXMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNfMTAtYXBwZW5kaWNlcyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiAxMC4gQXBwZW5kaWNlcyIpXSksX3ZtLl92KCIgIiksX2MoJ0JsYW5rU2xhdGUnKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiQ29udGFpbnM6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLHtzdGF0aWNDbGFzczoiY29udGFpbnMtdGFzay1saXN0In0sW19jKCdsaScse3N0YXRpY0NsYXNzOiJ0YXNrLWxpc3QtaXRlbSJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczoidGFzay1saXN0LWl0ZW0tY2hlY2tib3giLGF0dHJzOnsiY2hlY2tlZCI6IiIsImRpc2FibGVkIjoiIiwidHlwZSI6ImNoZWNrYm94In19KSxfdm0uX3YoIiBUZWNobmljYWwgUkFJRCBkb2N1bWVudCAobGlzdGluZyB0aGUgUmlza3MsIElzc3VlcywgQXNzdW1wdGlvbnMgYW5kIERlcGVuZGVuY2llcyB0aGF0IGFyZSBiZWluZyBtYWRlIHdoZW4gc2NvcGluZyB0aGUgdGVjaG5pY2FsIGVsZW1lbnRzIG9mIHRoZSBwcm9qZWN0KSIpXSldKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7YXR0cnM6eyJpZCI6ImdpdGFsay1jb250YWluZXIifX0pXSwxKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}